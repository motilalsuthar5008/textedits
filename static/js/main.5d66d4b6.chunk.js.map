{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onChange","setcolor","document","getElementById","value","body","style","backgroundColor","onClick","modebtn","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","rows","event","target","newtext","toUpperCase","showAlert","toLowerCase","copyText","select","navigator","clipboard","writeText","split","length","Alert","alert","msg","App","setMode","_useState3","_useState4","setAlert","setTimeout","components_Navbar","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5d66d4b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    const bodyColor = () => {\r\n        let setcolor = document.getElementById('newcolor').value; \r\n        document.body.style.backgroundColor = setcolor;\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                </a>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                        <div className='mx-2'>\r\n                            <input type=\"color\" id=\"newcolor\" onChange={bodyColor} />\r\n                        </div>\r\n                        <div className={`form-check form-switch text-${props.mode === 'dark'? 'light' : 'dark'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.modebtn} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Light Mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const handleonchange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handleUpcase = () => {\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert('success', 'Changed to upper case');\r\n    }\r\n    const handlelocase = () => {\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert('success', 'Changed to lower case');\r\n    }\r\n    const handlecopy = () => {\r\n        let copyText = document.getElementById('textBox');\r\n        copyText.select();\r\n        navigator.clipboard.writeText(copyText.value);\r\n        props.showAlert('success', 'Text Copied to clipboard');\r\n    }\r\n    const handleclear = () => {\r\n        setText(\"\");\r\n        props.showAlert('success', 'Text Cleared');\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container mt-3\">\r\n                <h1>Enter text to anylize</h1>\r\n                <div className=\"my-3\">\r\n                    <textarea className=\"form-control\" id=\"textBox\" value={text} rows=\"8\" onChange={handleonchange}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button className={`btn btn-${props.mode} mx-1`} onClick={handleUpcase}>UpperCase</button>\r\n                    <button className={`btn btn-${props.mode} mx-1`} onClick={handlelocase}>LowerCase</button>\r\n                    <button className={`btn btn-${props.mode} mx-1`} onClick={handlecopy}>Copy Text</button>\r\n                    <button className={`btn btn-${props.mode} mx-1`} onClick={handleclear}>Clear</button>\r\n                </div>\r\n                <div>\r\n                    <h3>Text Summary</h3>\r\n                    <p>{text.split(\" \").length-1} words and {text.length} characteres</p>\r\n                    <h3>Text Summary</h3>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import './App.css';\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (type, msg) => {\n    setAlert({\n      type: type,\n      msg: msg\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  const modebtn = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      showAlert('success', 'Dark Mode Enabled');\n    } else {\n      setMode(\"light\");\n      showAlert('success', 'Light Mode Enabled');\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextEdits\" mode={mode} modebtn={modebtn} />\n      <Alert alert={alert} />\n        {/* <Routes> */}\n          {/* <Route path=\"/\" element={<TextForm mode={mode} showAlert={showAlert} />} /> */}\n          <TextForm mode={mode} showAlert={showAlert} />\n          {/* <Route path=\"/about\" element={<About />} /> */}\n          {/* <About /> */}\n        {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}